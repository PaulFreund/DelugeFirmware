name: Nightly Build

on:
  workflow_dispatch: # allows manual triggering
  schedule:
    - cron: '*/15 * * * *'

jobs:
  nightly-detect:
    runs-on: ubuntu-latest
    outputs:
      new-commits: ${{ steps.count-commits.outputs.count }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to count the commits
      - name: Get new commits
        id: count-commits
        run: |
          count=$(git log --oneline --since '24 hours ago' | wc -l)
          echo "Saw $count commits"
          echo "count=$count" >> $GITHUB_OUTPUT
  nightly-build:
    uses: ./.github/workflows/build.yml
    needs: nightly-detect
    if: needs.nightly-detect.outputs.new-commits >= 0
    with:
      firmware-retention-days: 30
      build-type: 'nightly'
  nightly-deploy:
    needs: nightly-build
    steps:
      - name: Deploy Windows release
        uses: WebFreak001/deploy-nightly@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
        with:
          upload_url: https://uploads.github.com/repos/PaulFreund/DelugeFirmware/releases/116465059/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
          release_id: 116465059 # same as above (id can just be taken out the upload_url, it's used to find old releases)
          asset_path: ./release-oled.bin # path to archive to upload
          asset_name: oled-release-nightly-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/x-binary # required by GitHub API
          max_releases: 30 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
